rootpath='D:\xulab\project\slice recording\XUNL\summary of short term plasticity\';
celltype = {'vglut2+','vglut2-','vgat+','vgat-'};
Amp_mean=cell(1,length(celltype));
SNR=cell(1,length(celltype));
colorCases={[1,0.7,0.7],[0.7,1,0.7],[0.7,0.7,1],[0.7,0.7,0.7]};%colorCase{1}-{4} increase, decrease, maintain, no response
colorMean={[1,0,0],[0,1,0],[0,0,1],[0,0,0]};
PPR=cell(1,length(celltype));%only compare the first 2 response
plasticity=cell(1,length(celltype));%linearly fit the whole trend of response change
times=3;
savepathPPR=['D:\xulab\project\slice recording\XUNL\summary of short term plasticity\PPR\'];
savepath10P=['D:\xulab\project\slice recording\XUNL\summary of short term plasticity\10P\'];
for n_celltype=1:length(celltype)
    AbfFiles = dir(strcat(rootpath,celltype{n_celltype},'\*.abf'));
    cd(rootpath);    
    Amp_mean{1,n_celltype}=zeros(length(AbfFiles),10);%2d matrix, 1d-cell,2d 10 pulse elicit response
    SNR{1,n_celltype}=[]; %row vector storing each trial signal-to-noise ratio(response amplitude/ std_baseline)
    for n_abf=1:length(AbfFiles)
%             strcat(cellFolder,AbfFiles(n_abf).name);
        [d,si,h]=abfload(strcat(rootpath,celltype{n_celltype},'\',AbfFiles(n_abf).name),'channels','a');
        ts=(1:h.sweepLengthInPts)*h.si/10^6;
        sr=10^6/si;
        xlim=[0,3];
        nchannel=size(d,2);        
        figraw=figure;
        for nsubplot=1:nchannel
            figure(figraw);
            md=mean(d,3);
            laser_duration=find(md(:,2)>3);%second channel to find when laser on
            laser_start=laser_duration(1);
            STD_baseline = std(md(:,1));%std(md(laser_start-2*sr:laser_start,1));
            baseline=mean(md(:,1));%mean(md(laser_start-2*sr:laser_start,1));
            peak=max(md(laser_start:laser_start+0.1*sr,1)); %0.1s within after stimulus
            amp=abs(peak-baseline);
            if amp<=STD_baseline*times
                amplitude{1,n_abf}(1,end)=nan;
                plot(ts,md(:,nsubplot),'-','Color',colorMean{1},'LineWidth',2);
                hold on;
            elseif amp>STD_baseline*times
                amplitude{1,n_abf}(1,end)=amp;
                plot(ts,md(:,nsubplot),'-','Color',colorMean{2},'LineWidth',2);
                hold on;
            end
            sum_responsive=sum(double(amplitude{1,n_abf}(1:end-1)>0)); %last one is mean trace peak
            pro_responsive=sum_responsive/sumStimTrial;%rather than assuming that all trials have activity
            amplitude_meantrace=amplitude{1,n_abf}(end);
            if sum(amplitude{1,n_abf}(1:end-1)>0)==0
                amplitude_average=nan;
            else
                amplitude_average=sum(amplitude{1,n_abf}(1,amplitude{1,n_abf}(1:end-1)>0))/sum(amplitude{1,n_abf}(1:end-1)>0); %exclude no response trials and only average among those responsive
            end
            Amp_mean{1,n_celltype}(1,n_abf)=amplitude_meantrace;
            strsummary=['pResponsive=',num2str(pro_responsive),';amplitude mean=',num2str(amplitude_meantrace),';amplitude average',num2str(amplitude_average)];
            set(gca,'xlim',xlim);
            xlabel('time(s)');
            set(gca,'FontName','Arial','FontSize',14);
            xlim=get(gca,'xlim');
            ylim=get(gca,'ylim');
            text(0,ylim(end),strsummary);
            box off;
            saveas(figraw,[savepath,celltype{n_celltype},'-',AbfFiles(n_abf).name,'.fig'],'fig');
        end
        close all;
    end
end
%
save([savepath,'summary.mat'],'Amp_mean','Amp_average','pResponsive','SNR');

%%

close all;
cd(savepath);
load('summary.mat');
celltype = {'vglut2+','vglut2-','vgat+','vgat-'};
cellNum=cellfun(@(x) length(x),pResponsive);
% cellNumRes=cellfun(@(x) length(x)-sum(x==0),pResponsive);
%cellNumRes=cellfun(@(x) length(x)-sum(isnan(x)),Amp_mean);
cellNumRes=cellfun(@(x) length(x)-sum(isnan(x)),Amp_ttest);

figPRes_nonzero=bar_error(pResCorrected,celltype,'p(respond to light stimuli) if cell ever respond');

function figname=bar_error(data,xlabel,ylabelstr)
% statistics part
p12=ranksum(data{1,1},data{1,2});
p34=ranksum(data{1,3},data{1,4});
p13=ranksum(data{1,1},data{1,3});
% p12=ttest2(data{1,1},data{1,2});
% p34=ttest2(data{1,3},data{1,4});
% p13=ttest2(data{1,1},data{1,3});
% figure part
figname=figure;
y_pres=cellfun(@(x) nanmean(x),data);
sem_pres=cellfun(@(x) nanstd(x)/sqrt(length(x)),data);
% c=categorical(celltype);
% bar(c,y_pres,'w');
bar(y_pres,'w');
hold on;
for i=1:length(data)
    scatter(i*ones(1,length(data{1,i})),data{1,i},20,[0.5,0.5,0.5],'filled');
end
errorbar(y_pres,sem_pres,'ok','LineWidth',2);
set(gca,'XTickLabel',xlabel);
ylabel(ylabelstr);
set(gca,'FontName','Arial','FontSize',14);
box off;
ylim=get(gca,'Ylim');
text(1.5,0.9*ylim(end),plabelsymbol(p12),'FontSize',14);
text(3.5,0.9*ylim(end),plabelsymbol(p34),'FontSize',14);
text(2,ylim(end),plabelsymbol(p13),'FontSize',14);
saveas(gcf,[ylabelstr,'.fig'],'fig');
end

function [str]=plabelsymbol(pvalue)
if pvalue<0.05 && pvalue>=0.01
    str=' *';
elseif pvalue<0.01 && pvalue>=0.001
    str=' **';
elseif pvalue<0.001
    str=' ***';
elseif pvalue>=0.05 && pvalue<0.01
    pvalue=round(pvalue,2);%保留两位即可
    str=strcat('p=',num2str(pvalue));
else
    pvalue=round(pvalue,1);%保留1位即可
    str=strcat('p=',num2str(pvalue));
end
end